"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./lib/notion.js":
/*!***********************!*\
  !*** ./lib/notion.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAbout\": function() { return /* binding */ getAbout; },\n/* harmony export */   \"getAllWorks\": function() { return /* binding */ getAllWorks; },\n/* harmony export */   \"getLanding\": function() { return /* binding */ getLanding; },\n/* harmony export */   \"getSinglePost\": function() { return /* binding */ getSinglePost; }\n/* harmony export */ });\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @notionhq/client */ \"./node_modules/@notionhq/client/build/src/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nconst { NotionToMarkdown  } = __webpack_require__(/*! notion-to-md */ \"./node_modules/notion-to-md/build/index.js\");\nconst notion = new _notionhq_client__WEBPACK_IMPORTED_MODULE_0__.Client({\n    auth: process.env.NOTION_API_KEY\n});\nconst n2m = new NotionToMarkdown({\n    notionClient: notion\n});\nconst getAllWorks = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_WORKS\n    });\n    const allWorks = response.results;\n    return allWorks.map((wrk)=>{\n        return getWorks(wrk);\n    });\n};\nconst getWorks = (wrk)=>{\n    return {\n        id: wrk.id,\n        title: wrk.properties.Name.title[0].plain_text,\n        slug: wrk.properties.Slug.formula.string\n    };\n};\nconst getSinglePost = async (slug)=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_WORKS,\n        filter: {\n            property: \"Slug\",\n            formula: {\n                string: {\n                    equals: slug\n                }\n            }\n        }\n    });\n    const page = response.results[0];\n    const mdblocks = await n2m.pageToMarkdown(page.id);\n    const mdString = n2m.toMarkdownString(mdblocks);\n    return {\n        markdown: mdString\n    };\n};\nconst getAbout = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_ABOUT\n    });\n    const allAbout = response.results;\n    return allAbout.map((abt)=>{\n        return getAboutData(abt);\n    });\n};\nconst getAboutData = (abt)=>{\n    return {\n        id: abt.id,\n        title: abt.properties.Name.title[0].plain_text\n    };\n};\nconst getLanding = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_HOME\n    });\n    const allHome = response.results[0];\n    return getHomeData(0);\n};\nconst getHomeData = (num)=>{\n    return {\n        id: [\n            0\n        ].id,\n        title: [\n            0\n        ].properties.Name.title[0].plain_text\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnQgfSBmcm9tIFwiQG5vdGlvbmhxL2NsaWVudFwiO1xyXG5jb25zdCB7IE5vdGlvblRvTWFya2Rvd24gfSA9IHJlcXVpcmUoXCJub3Rpb24tdG8tbWRcIik7XHJcblxyXG5cclxuY29uc3Qgbm90aW9uID0gbmV3IENsaWVudCh7XHJcbiAgYXV0aDogcHJvY2Vzcy5lbnYuTk9USU9OX0FQSV9LRVksXHJcbn0pXHJcblxyXG5jb25zdCBuMm0gPSBuZXcgTm90aW9uVG9NYXJrZG93bih7IG5vdGlvbkNsaWVudDogbm90aW9uIH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldEFsbFdvcmtzID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBub3Rpb24uZGF0YWJhc2VzLnF1ZXJ5KHtcclxuICAgICAgICBkYXRhYmFzZV9pZDogcHJvY2Vzcy5lbnYuTk9USU9OX1dPUktTXHJcbiAgICB9KTtcclxuICBcclxuICAgIGNvbnN0IGFsbFdvcmtzID0gcmVzcG9uc2UucmVzdWx0cztcclxuICBcclxuICAgIHJldHVybiBhbGxXb3Jrcy5tYXAoKHdyaykgPT4ge1xyXG4gICAgICByZXR1cm4gZ2V0V29ya3Mod3JrKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IGdldFdvcmtzID0gKHdyaykgPT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaWQ6IHdyay5pZCxcclxuICAgICAgdGl0bGU6d3JrLnByb3BlcnRpZXMuTmFtZS50aXRsZVswXS5wbGFpbl90ZXh0LFxyXG4gICAgICBzbHVnOndyay5wcm9wZXJ0aWVzLlNsdWcuZm9ybXVsYS5zdHJpbmcsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRTaW5nbGVQb3N0ID0gYXN5bmMgKHNsdWcpID0+IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbm90aW9uLmRhdGFiYXNlcy5xdWVyeSh7XHJcbiAgICAgIGRhdGFiYXNlX2lkOiBwcm9jZXNzLmVudi5OT1RJT05fV09SS1MsXHJcbiAgICAgIGZpbHRlcjoge1xyXG4gICAgICAgIHByb3BlcnR5OiBcIlNsdWdcIixcclxuICAgICAgICBmb3JtdWxhOiB7XHJcbiAgICAgICAgICBzdHJpbmc6IHtcclxuICAgICAgICAgICAgZXF1YWxzOiBzbHVnLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgXHJcbiAgICBjb25zdCBwYWdlID0gcmVzcG9uc2UucmVzdWx0c1swXTtcclxuICAgIGNvbnN0IG1kYmxvY2tzID0gYXdhaXQgbjJtLnBhZ2VUb01hcmtkb3duKHBhZ2UuaWQpO1xyXG4gICAgY29uc3QgbWRTdHJpbmcgPSBuMm0udG9NYXJrZG93blN0cmluZyhtZGJsb2Nrcyk7XHJcbiAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBtYXJrZG93bjogbWRTdHJpbmcsXHJcbiAgICB9O1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0QWJvdXQgPSBhc3luYyAoKSA9PiB7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBub3Rpb24uZGF0YWJhc2VzLnF1ZXJ5KHtcclxuICAgICAgZGF0YWJhc2VfaWQ6IHByb2Nlc3MuZW52Lk5PVElPTl9BQk9VVFxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBhbGxBYm91dCA9IHJlc3BvbnNlLnJlc3VsdHM7XHJcblxyXG4gIHJldHVybiBhbGxBYm91dC5tYXAoKGFidCkgPT4ge1xyXG4gICAgcmV0dXJuIGdldEFib3V0RGF0YShhYnQpO1xyXG4gIH0pO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0QWJvdXREYXRhID0gKGFidCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBpZDogYWJ0LmlkLFxyXG4gICAgdGl0bGU6YWJ0LnByb3BlcnRpZXMuTmFtZS50aXRsZVswXS5wbGFpbl90ZXh0LFxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRMYW5kaW5nID0gYXN5bmMgKCkgPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbm90aW9uLmRhdGFiYXNlcy5xdWVyeSh7XHJcbiAgICAgIGRhdGFiYXNlX2lkOiBwcm9jZXNzLmVudi5OT1RJT05fSE9NRVxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBhbGxIb21lID0gcmVzcG9uc2UucmVzdWx0c1swXTtcclxuXHJcbiAgcmV0dXJuIGdldEhvbWVEYXRhKDApO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0SG9tZURhdGEgPSAobnVtKSA9PiB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGlkOiBbMF0uaWQsXHJcbiAgICB0aXRsZTpbMF0ucHJvcGVydGllcy5OYW1lLnRpdGxlWzBdLnBsYWluX3RleHQsXHJcbiAgICAvL2Rlc2NyaXB0aW9uOmhtLnByb3BlcnRpZXMuRGVzY3JpcHRpb24ucmljaF90ZXh0WzBdLnRleHQuY29udGVudFxyXG4gIH07XHJcbn0iXSwibmFtZXMiOlsiQ2xpZW50IiwiTm90aW9uVG9NYXJrZG93biIsInJlcXVpcmUiLCJub3Rpb24iLCJhdXRoIiwicHJvY2VzcyIsImVudiIsIk5PVElPTl9BUElfS0VZIiwibjJtIiwibm90aW9uQ2xpZW50IiwiZ2V0QWxsV29ya3MiLCJyZXNwb25zZSIsImRhdGFiYXNlcyIsInF1ZXJ5IiwiZGF0YWJhc2VfaWQiLCJOT1RJT05fV09SS1MiLCJhbGxXb3JrcyIsInJlc3VsdHMiLCJtYXAiLCJ3cmsiLCJnZXRXb3JrcyIsImlkIiwidGl0bGUiLCJwcm9wZXJ0aWVzIiwiTmFtZSIsInBsYWluX3RleHQiLCJzbHVnIiwiU2x1ZyIsImZvcm11bGEiLCJzdHJpbmciLCJnZXRTaW5nbGVQb3N0IiwiZmlsdGVyIiwicHJvcGVydHkiLCJlcXVhbHMiLCJwYWdlIiwibWRibG9ja3MiLCJwYWdlVG9NYXJrZG93biIsIm1kU3RyaW5nIiwidG9NYXJrZG93blN0cmluZyIsIm1hcmtkb3duIiwiZ2V0QWJvdXQiLCJOT1RJT05fQUJPVVQiLCJhbGxBYm91dCIsImFidCIsImdldEFib3V0RGF0YSIsImdldExhbmRpbmciLCJOT1RJT05fSE9NRSIsImFsbEhvbWUiLCJnZXRIb21lRGF0YSIsIm51bSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/notion.js\n"));

/***/ })

});