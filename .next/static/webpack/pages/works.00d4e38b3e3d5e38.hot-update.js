"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/works",{

/***/ "./lib/notion.js":
/*!***********************!*\
  !*** ./lib/notion.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAbout\": function() { return /* binding */ getAbout; },\n/* harmony export */   \"getAboutPage\": function() { return /* binding */ getAboutPage; },\n/* harmony export */   \"getAllContact\": function() { return /* binding */ getAllContact; },\n/* harmony export */   \"getAllWorks\": function() { return /* binding */ getAllWorks; },\n/* harmony export */   \"getLanding\": function() { return /* binding */ getLanding; },\n/* harmony export */   \"getSection\": function() { return /* binding */ getSection; },\n/* harmony export */   \"getSinglePost\": function() { return /* binding */ getSinglePost; }\n/* harmony export */ });\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @notionhq/client */ \"./node_modules/@notionhq/client/build/src/index.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/request-meta */ \"./node_modules/next/dist/server/request-meta.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\nconst { NotionToMarkdown  } = __webpack_require__(/*! notion-to-md */ \"./node_modules/notion-to-md/build/index.js\");\nconst notion = new _notionhq_client__WEBPACK_IMPORTED_MODULE_0__.Client({\n    auth: process.env.NOTION_API_KEY\n});\nconst n2m = new NotionToMarkdown({\n    notionClient: notion\n});\nconst getAllWorks = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_WORKS\n    });\n    const allWorks = response.results;\n    return allWorks.map((wrk)=>{\n        return getWorks(wrk);\n    });\n};\nconst getWorks = (wrk)=>{\n    return {\n        id: wrk.id,\n        title: wrk.properties.Name.title[0].plain_text,\n        slug: wrk.properties.Slug.formula.string\n    };\n};\nconst getSinglePost = async (slug)=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_WORKS,\n        filter: {\n            property: \"Slug\",\n            formula: {\n                string: {\n                    equals: slug\n                }\n            }\n        }\n    });\n    const page = response.results[0];\n    const metadata = getPageMetaData(page);\n    const mdblocks = await n2m.pageToMarkdown(page.id);\n    const mdString = n2m.toMarkdownString(mdblocks);\n    return {\n        metadata,\n        markdown: mdString\n    };\n};\nconst getPageMetaData = (post)=>{\n    return {\n        id: post.id,\n        title: post.properties.Name.title[0].plain_text,\n        slug: post.properties.Slug.formula.string\n    };\n};\nconst getAboutPage = async ()=>{\n    const response = await notion.pages.retrieve({\n        page_id: process.env.NOTION_ABOUT\n    });\n    const page = response;\n    const mdblocks = await n2m.pageToMarkdown(page.id);\n    const mdString = n2m.toMarkdownString(mdblocks);\n    return {\n        markdown: mdString\n    };\n};\nconst getAbout = async ()=>{\n    const response = await notion.pages.retrieve({\n        page_id: process.env.NOTION_ABOUT\n    });\n    const page = response;\n    return page;\n};\nconst getAllContact = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_CONTACT\n    });\n    const allContacts = response.results;\n    return allContacts.map((ctc)=>{\n        return getContacts(ctc);\n    });\n};\nconst getContacts = (ctc)=>{\n    return {\n        id: ctc.id,\n        title: ctc.properties.Name.title[0].plain_text\n    };\n};\nconst getLanding = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_HOME,\n        sorts: [\n            {\n                property: \"Section\",\n                direction: \"ascending\"\n            }\n        ]\n    });\n    const allLanding = response.results[0];\n    return getHomeData(allLanding);\n};\nconst getSection = async ()=>{\n    const response = await notion.databases.query({\n        database_id: process.env.NOTION_HOME,\n        sorts: [\n            {\n                property: \"Section\",\n                direction: \"ascending\"\n            }\n        ]\n    });\n    const allSection = response.results[1];\n    return getHomeData(allSection);\n};\nconst getHomeData = (data)=>{\n    return {\n        id: data.id,\n        title: data.properties.Name.title[0].plain_text,\n        description: data.properties.Description.rich_text[0].text.content,\n        cover: data.properties.Image.files[0].file.url\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/notion.js\n"));

/***/ })

});